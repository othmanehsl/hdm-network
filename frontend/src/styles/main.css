:root {
  --primary-color: #4a6cf7;
  --primary-hover: #3955c8;
  --secondary-color: #f5f7ff;
  --text-color: #333;
  --text-light: #666;
  --danger-color: #ff4757;
  --success-color: #2ed573;
  --warning-color: #ffa502;
  --border-color: #e6e6e6;
  --border-radius: 8px;
  --shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
  --transition: all 0.3s ease;
  --font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: var(--font-family);
  background-color: #f8fafd;
  color: var(--text-color);
  line-height: 1.6;
}

.App {
  width: 100%;
  max-width: 900px;
  margin: 0 auto;
  padding: 2rem 1.5rem;
}

h1 {
  font-size: 2.2rem;
  font-weight: 700;
  margin-bottom: 1.5rem;
  text-align: center;
  color: var(--primary-color);
}

/* Task form styling */
form {
  background-color: white;
  padding: 1.5rem;
  border-radius: var(--border-radius);
  box-shadow: var(--shadow);
  margin-bottom: 2rem;
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 1rem;
}

@media (max-width: 768px) {
  form {
    grid-template-columns: 1fr;
  }
}

form input,
form textarea,
form select {
  padding: 0.75rem 1rem;
  border-radius: var(--border-radius);
  border: 1px solid var(--border-color);
  font-family: inherit;
  font-size: 1rem;
  width: 100%;
  transition: var(--transition);
}

form input:focus,
form textarea:focus,
form select:focus {
  outline: none;
  border-color: var(--primary-color);
  box-shadow: 0 0 0 3px rgba(74, 108, 247, 0.2);
}

form textarea {
  resize: vertical;
  min-height: 100px;
  grid-column: 1 / -1;
}

form button {
  padding: 0.75rem 1rem;
  background-color: var(--primary-color);
  color: white;
  border: none;
  border-radius: var(--border-radius);
  font-size: 1rem;
  font-weight: 600;
  cursor: pointer;
  transition: var(--transition);
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
}

form button[type="submit"] {
  grid-column: 1 / 2;
}

form button[type="button"] {
  background-color: #f2f3f5;
  color: var(--text-color);
}

form button:hover {
  background-color: var(--primary-hover);
}

form button[type="button"]:hover {
  background-color: #e1e4e9;
}

/* Task List Styling */
ul.task-list {
  list-style: none;
  display: grid;
  gap: 1rem;
}

.task-card {
  background-color: white;
  border-radius: var(--border-radius);
  box-shadow: var(--shadow);
  padding: 1.25rem;
  transition: var(--transition);
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
  position: relative;
  border-left: 4px solid var(--primary-color);
}

.task-card:hover {
  transform: translateY(-2px);
  box-shadow: 0 8px 15px rgba(0, 0, 0, 0.08);
}

.task-card.completed {
  border-left-color: var(--success-color);
  opacity: 0.8;
}

.task-card.in-progress {
  border-left-color: var(--warning-color);
}

.task-header {
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
}

.task-title {
  font-size: 1.25rem;
  font-weight: 600;
  color: var(--text-color);
  margin-right: 1rem;
}

.task-status {
  font-size: 0.75rem;
  font-weight: 600;
  padding: 0.3rem 0.6rem;
  border-radius: 20px;
  text-transform: lowercase;
}

.task-status.not-started {
  background-color: #f2f3f5;
  color: var(--text-color);
}

.task-status.in-progress {
  background-color: #fff3e0;
  color: #ff9800;
}

.task-status.completed {
  background-color: #e8f5e9;
  color: var(--success-color);
}

.task-meta {
  display: flex;
  gap: 1rem;
  font-size: 0.85rem;
  color: var(--text-light);
  margin-bottom: 0.5rem;
}

.task-date, .task-time {
  display: flex;
  align-items: center;
  gap: 0.25rem;
}

.task-description {
  color: var(--text-light);
  font-size: 0.95rem;
  line-height: 1.5;
}

.task-actions {
  display: flex;
  gap: 0.5rem;
  margin-top: 0.5rem;
}

.task-actions button {
  background-color: transparent;
  border: 1px solid var(--border-color);
  border-radius: var(--border-radius);
  padding: 0.5rem;
  cursor: pointer;
  transition: var(--transition);
  display: flex;
  align-items: center;
  justify-content: center;
}

.task-actions button.edit {
  color: var(--primary-color);
}

.task-actions button.delete {
  color: var(--danger-color);
}

.task-actions button:hover {
  background-color: #f2f3f5;
}

/* Modal Styling - Update existing file */
.modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.5);
  backdrop-filter: blur(3px);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
  animation: fadeIn 0.2s ease;
}

.modal-content {
  background: #fff;
  padding: 2rem;
  border-radius: var(--border-radius);
  position: relative;
  max-width: 550px;
  width: 95%;
  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);
  animation: slideUp 0.3s ease;
}

.modal-close {
  position: absolute;
  top: 1rem;
  right: 1rem;
  background: transparent;
  border: none;
  font-size: 1.5rem;
  cursor: pointer;
  width: 36px;
  height: 36px;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 50%;
  color: var(--text-light);
  transition: var(--transition);
}

.modal-close:hover {
  background-color: #f2f3f5;
  color: var(--danger-color);
}

.modal-title {
  font-size: 1.5rem;
  margin-bottom: 1.5rem;
  color: var(--text-color);
}

.empty-state {
  text-align: center;
  padding: 3rem 1rem;
  color: var(--text-light);
}

.empty-state svg {
  width: 150px;
  height: 150px;
  margin-bottom: 1.5rem;
  opacity: 0.6;
}

.empty-state h3 {
  font-size: 1.5rem;
  margin-bottom: 1rem;
  color: var(--text-color);
}

.empty-state p {
  max-width: 400px;
  margin: 0 auto;
}

/* Animations */
@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes slideUp {
  from { transform: translateY(30px); opacity: 0; }
  to { transform: translateY(0); opacity: 1; }
}

/* Add a loading skeleton for tasks */
.task-skeleton {
  background-color: white;
  border-radius: var(--border-radius);
  box-shadow: var(--shadow);
  padding: 1.25rem;
  height: 150px;
  position: relative;
  overflow: hidden;
}

.skeleton-line {
  height: 15px;
  margin-bottom: 10px;
  background: #f2f3f5;
  border-radius: 4px;
  overflow: hidden;
  position: relative;
}

.skeleton-line::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255,255,255,0.6), transparent);
  animation: shimmer 1.5s infinite;
}

.skeleton-line.title {
  width: 70%;
  height: 24px;
}

.skeleton-line.meta {
  width: 40%;
  height: 12px;
}

.skeleton-line.desc {
  width: 90%;
}

@keyframes shimmer {
  0% { transform: translateX(-100%); }
  100% { transform: translateX(100%); }
}

/* Task filters */
.task-filters {
  display: flex;
  gap: 0.5rem;
  margin-bottom: 1.5rem;
  flex-wrap: wrap;
}

.filter-button {
  padding: 0.5rem 1rem;
  background-color: white;
  border: 1px solid var(--border-color);
  border-radius: var(--border-radius);
  font-size: 0.9rem;
  cursor: pointer;
  transition: var(--transition);
}

.filter-button:hover {
  background-color: var(--secondary-color);
}

.filter-button.active {
  background-color: var(--primary-color);
  color: white;
  border-color: var(--primary-color);
}

/* App header */
.app-header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin-bottom: 2rem;
  flex-wrap: wrap;
  gap: 1rem;
}

.header-left h1 {
  margin-bottom: 0;
  text-align: left;
}

.header-right {
  display: flex;
  align-items: center;
  gap: 1rem;
}

@media (max-width: 600px) {
  .app-header {
    flex-direction: column;
    align-items: flex-start;
  }
  
  .header-left h1 {
    text-align: center;
    width: 100%;
  }
  
  .header-right {
    width: 100%;
    justify-content: center;
  }
}
